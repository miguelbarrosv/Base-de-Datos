REM ******** TABLA DEPART: *********** 

DROP TABLE DEPART CASCADE CONSTRAINTS; 

CREATE TABLE DEPART (
 	DEPT_NO  NUMBER(2),
	DNOMBRE  VARCHAR2(14), 
 	LOC      VARCHAR2(14),
	CONSTRAINT DEP_PK PRIMARY KEY (DEPT_NO)
	);

INSERT INTO DEPART VALUES (10,'CONTABILIDAD','SEVILLA');
INSERT INTO DEPART VALUES (20,'INVESTIGACION','MADRID');
INSERT INTO DEPART VALUES (30,'VENTAS','BARCELONA');
INSERT INTO DEPART VALUES (40,'PRODUCCION','BILBAO');
COMMIT;
INSERT INTO DEPART VALUES (50,'INFORMATICA',NULL);
ROLLBACK;
desc DEPART
INSERT INTO DEPART (DEPT_NO,DNOMBRE) VALUES (50,'INFORMATICA');

Update Depart
SET LOC = 'CORDOBA'
where dept_no = 50;

UPDATE DEPART 
SET LOC = DEFAULT, DNOMBRE = 'EDUCACION'
WHERE DEPT_NO = 50;

DELETE FROM DEPART
WHERE DEPT_NO = 50;

Select* from depart; 

COMMIT;

REM /*  ******** TABLA EMPLE: ************* */

DROP TABLE EMPLE CASCADE CONSTRAINTS; 

CREATE TABLE EMPLE (
 	EMP_NO    NUMBER(4),
 	APELLIDO  VARCHAR2(10),
 	OFICIO    VARCHAR2(15),
 	ID_JEFE  NUMBER(4) ,
 	FECHA_ALTA DATE,
 	SALARIO   NUMBER(9) NOT NULL,
 	COMISION_PCT  NUMBER(3),
 	DEPT_NO   NUMBER(2) NOT NULL,
	CONSTRAINT EMPLE_PK PRIMARY KEY (EMP_NO),
	CONSTRAINT EMPLE_DIR_FK FOREIGN KEY (ID_JEFE)
				REFERENCES EMPLE(EMP_NO)  ON DELETE SET NULL,
	CONSTRAINT EMPLE_DEP_FK FOREIGN KEY (DEPT_NO)
				REFERENCES DEPART(DEPT_NO) ON DELETE CASCADE);

INSERT INTO EMPLE VALUES (7839,'REY','PRESIDENTE',NULL,TO_DATE('17/11/1981','DD/MM/YYYY'),6500,NULL,10);
INSERT INTO EMPLE VALUES (7566,'JIMENEZ','GERENTE',7839,TO_DATE('12/04/1981','DD/MM/YYYY'),3867,NULL,20);
INSERT INTO EMPLE VALUES (7698,'NEGRO','GERENTE',7839,TO_DATE('11/05/1981','DD/MM/YYYY'),3705,NULL,30);
INSERT INTO EMPLE VALUES (7782,'CEREZO','GERENTE',7839,TO_DATE('19/06/1981','DD/MM/YYYY'),3185,NULL,10);
INSERT INTO EMPLE VALUES (7788,'GIL','ANALISTA',7566,TO_DATE('19/11/1981','DD/MM/YYYY'),3900,NULL,20);
INSERT INTO EMPLE VALUES (7902,'FERNANDEZ','ANALISTA',7566,TO_DATE('13/12/1981','DD/MM/YYYY'),3900,NULL,20);
INSERT INTO EMPLE VALUES (7499,'ARROYO','COMERCIAL',7698,TO_DATE('20/02/1980','DD/MM/YYYY'),2080,10,30);
INSERT INTO EMPLE VALUES (7521,'SALA','COMERCIAL',7698,TO_DATE('22/02/1981','DD/MM/YYYY'),1625,5,30);
INSERT INTO EMPLE VALUES (7654,'MARTIN','COMERCIAL',7698,TO_DATE('29/09/1981','DD/MM/YYYY'),1625,5,30);
INSERT INTO EMPLE VALUES (7844,'TOVAR','COMERCIAL',7698,TO_DATE('18/09/1981','DD/MM/YYYY'),1950,8,30);
INSERT INTO EMPLE VALUES (7900,'JIMENO','PROGRAMADOR',7566,TO_DATE('13/12/1981','DD/MM/YYYY'),1235,NULL,30);
INSERT INTO EMPLE VALUES (7369,'SANCHEZ','PROGRAMADOR',7566,TO_DATE('17/12/1980','DD/MM/YYYY'),1040,NULL,20);
INSERT INTO EMPLE VALUES (7876,'ALONSO','PROGRAMADOR',7788,TO_DATE('23/09/1981','DD/MM/YYYY'),1430,NULL,20);
INSERT INTO EMPLE VALUES (7934,'SANCHEZ','AUXILIAR',7782,TO_DATE('23/01/1982','DD/MM/YYYY'),1690,NULL,10);

COMMIT;

/*1. Seleccionar de la tabla EMPLE aquellos empleados del departamento 20 y cuyo oficio sea ‘ANALISTA’. 
La consulta se ha de ordenar de modo descendente por APELLIDO y también de manera descendente por número de empleado.*/
SELECT *
FROM EMPLE
WHERE DEPT_NO = 20 AND upper(OFICIO)='ANALISTA'
ORDER BY APELLIDO DESC, DEPT_NO DESC;
/* 2. Mostrar el apellido, oficio y fecha de alta de los empleados contratados entre los meses de mayo y setiembre del año 1981. 
Obtener la salida ordenada por fecha de alta. */
SELECT APELLIDO, OFICIO, FECHA_ALTA
FROM EMPLE
WHERE FECHA_ALTA BETWEEN TO_DATE ('01/05/1981', 'DD/MM/YYYY') 
AND TO_DATE ('30/09/1981', 'DD/MM/YYYY')
ORDER BY FECHA_ALTA DESC;
/* 3.Mostrar los apellidos de los empleados concatenados con el oficio, separados por una coma y un espacio en blanco y ordenados por el apellido. 
Llamar a la columna 'EMPLE y OFI'. */
SELECT APELLIDO,OFICIO, APELLIDO || ', ' || OFICIO AS "MIGUEL"
FROM EMPLE
ORDER BY APELLIDO;

/* Averigua la estructura de la tabla EMPLE,  sus restricciones y las columnas que forman parte de cada restricción,
que se pretende crear una tabla de trabajo a partir de ella.*/
DESC EMPLE;

SELECT CONSTRAINT_TYPE, CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE upper(TABLE_NAME)='EMPLE';

SELECT *
FROM USER_CONS_COLUMS
WHERE UPPER(TABLE_NAME)='EMPLE';

/*Crear la tabla denominada EMPLEADOS30 con la misma estructura de la tabla EMPLE 
pero con los datos de los empleados del departamento 30 de la tabla EMPLE.  
Para ello utiliza CREATE TABLE … AS SELECT …. ¿Se crean todas las restricciones?*/

CREATE TABLE EMPLEADOS30 
AS (SELECT  EMP_NO ,
APELLIDO ,
OFICIO ,
ID_JEFE ,
FECHA_ALTA ,
SALARIO ,
COMISION_PCT ,
DEPT_NO  FROM EMPLE
WHERE DEPT_NO=30);

SELECT CONSTRAINT_TYPE, CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE upper(TABLE_NAME)='EMPLEADOS30';

ALTER TABLE EMPLEADOS30
ADD CONSTRAINT EMPLE30_DIR_FK FOREIGN KEY (DEPT_NO)
                            REFERENCES DEPART ON DELETE CASCADE;
                            
ALTER TABLE EMPLEADOS30
ADD CONSTRAINT EMPLE30_EMPNO_PK PRIMARY KEY (EMP_NO);

ALTER TABLE EMPLEADOS30
ADD CONSTRAINT EMPLE30_IDJEFE_FK FOREIGN KEY (ID_JEFE)
                                  REFERENCES EMPLE ON DELETE SET NULL ;

UPDATE EMPLEADOS30
SET ID_JEFE=NULL
WHERE EMP_NO IN (7698,7900);

SELECT *
FROM EMPLEADOS30;

/* Insertar en la tabla EMPLE a un empleado de apellido 'SAAVEDRA' con número de empleado 2000. 
La fecha de alta será la fecha actual, el SALARIO será el mismo salario que el del empleado de apellido 'SALA' 
más el 20% y el resto de datos serán los mismos que los datos del empleado de apellido 'SALA'.*/

SELECT * FROM EMPLE;

INSERT INTO EMPLE(APELLIDO,FECHA_ALTA,EMP_NO,SALARIO,COMISION_PCT,DEPT_NO )
SELECT 'SAAVEDRA',SYSDATE,2000,SALARIO + SALARIO * 0.2,COMISION_PCT,DEPT_NO
FROM EMPLE
WHERE UPPER(APELLIDO)='SALA';

SELECT * FROM EMPLE;

/*Actualiza la tabla EMPLE, cambiando el número de departamento, 
para todos los empleados que tenga el mismo oficio que el empleado 7566, 
por el número de departamento actual del empleado 7499.*/

SELECT * FROM EMPLE;

UPDATE EMPLE
SET DEPT_NO = (SELECT DEPT_NO
              FROM EMPLE
              WHERE EMP_NO=7499)
WHERE OFICIO = (SELECT OFICIO
              FROM EMPLE
              WHERE EMP_NO=7566);
               
SELECT * FROM EMPLE;

/*Borrar todos los departamentos de la tabla 
DEPART para los cuales no existan empleados en EMPLE.*/

SELECT * FROM DEPART;

DELETE FROM DEPART 
WHERE DEPT_NO NOT IN (SELECT DISTINCT
DEPT_NO
FROM EMPLE);

/*Eliminar a todos los empleados que están en un 
departamento cuyo nombre contiene una 'O'.*/

SELECT * FROM DEPART;

DELETE FROM DEPART
WHERE DEPT_NO IN (SELECT DEPT_NO
FROM DEPART
WHERE UPPER(DNOMBRE) LIKE '%O%');

SELECT * FROM DEPART;

/*Incrementa el salario del empleado de apellido REY. Su nuevo salario será el que tenía antes más un importe que 
corresponde con la comisión que tiene ARROYO.*/

SELECT * FROM EMPLE
WHERE UPPER(APELLIDO) = 'REY';

SELECT COMISION_PCT 
FROM EMPLE 
WHERE UPPER(APELLIDO)= 'ARROYO'

UPDATE EMPLE
SET SALARIO = SALARIO + (SELECT COMISION_PCT
                        FROM EMPLE
                        WHERE UPPER(APELLIDO)='ARROYO')
WHERE UPPER(APELLIDO)='ARROYO';

SELECT * FROM EMPLE;



--Crear un listado único con todos los oficios que haya en el departamento 10. 
--Incluir la localidad del departamento en el resultado.

SELECT * FROM EMPLE;

SELECT DISTINCT E.OFICIO,D.LOC
FROM EMPLE E, DEPART D
WHERE E.DEPT_NO = 10 AND E.DEPT_NO = D.DEPT_NO ;



-- 4 Mostrar el apellido, el nombre del departamento y el salario de cualquier empleado cuyo salario y 
--comisión coincidan con los de cualquier empleado que trabaje en Barcelona, 
--incluidos los que no tienen comisión.

SELECT EMPLE.APELLIDO, DEPART.DNOMBRE, EMPLE.SALARIO, NVL(TO_CHAR(EMPLE.COMISION_PCT),'SIN COMI')
FROM DEPART, EMPLE
WHERE EMPLE.DEPT_NO = DEPART.DEPT_NO AND
(SALARIO, NVL(COMISON_PCT,-1)) IN (SELECT EMPLE.COMISON_PCT, EMPLE.SALARIO
                                  FROM EMPLE
                                  WHERE EMPLE.DEPT_NO=DEPART.DEPT_NO AND
                                  UPPER(DEPART.LOC)='BARCELONA');